package com.example.testa;

import java.net.MalformedURLException;
import java.net.URL;
import java.security.MessageDigest;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.BindingProvider;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.3-hudson-390-
 * Generated source version: 2.0
 * <p>
 * An example of how this class may be used:
 *
 * <pre>
 * oaWebService service = new oaWebService();
 * OaWebService portType = service.getOaWebServiceImplPort();
 * portType.createProcess(...);
 * </pre>
 *
 * </p>
 *
 */
@WebServiceClient(name = "oaWebService", targetNamespace = "http://demand.pm.web.extend.bpc.bit.com/", wsdlLocation = "http://10.242.29.244:30060/gd-bpc-extend-web/services/oaWebService?wsdl")
public class OaWebService_Service extends Service {

	private final static URL OAWEBSERVICE_WSDL_LOCATION;
	private final static Logger logger = Logger
			.getLogger(OaWebService_Service.class
					.getName());

	static {
		URL url = null;
		try {
			URL baseUrl;
			baseUrl = OaWebService_Service.class
					.getResource(".");
			url = new URL(
					"http://10.242.29.244:30060/gd-bpc-extend-web/services/oaWebService?wsdl");
		} catch (MalformedURLException e) {
			logger.warning("Failed to create URL for the wsdl Location: 'http://10.242.29.244:30060/gd-bpc-extend-web/services/oaWebService?wsdl', retrying as a local file");
			logger.warning(e.getMessage());
		}
		OAWEBSERVICE_WSDL_LOCATION = url;
	}

	public OaWebService_Service(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public OaWebService_Service() {
		super(OAWEBSERVICE_WSDL_LOCATION, new QName(
				"http://demand.pm.web.extend.bpc.bit.com/", "oaWebService"));
	}

	/**
	 *
	 * @return returns OaWebService
	 */
	@WebEndpoint(name = "OaWebServiceImplPort")
	public OaWebService getOaWebServiceImplPort() {
        return super.getPort(new QName(
				"http://demand.pm.web.extend.bpc.bit.com/",
				"OaWebServiceImplPort"), OaWebService.class);
	}

	public static void main(String[] args) {
        String pass = MD5("uflow-oa-databydata" + "2013-18-01 18:00:01");
        long processid = 151761071;
        String account = "";
        StringBuffer xml = new StringBuffer();
        xml.append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
        xml.append("<root>");
        xml.append("<dates>");
        xml.append("<systemname>OA系统</systemname>");
        xml.append("<processcode>wb000002</processcode>");
        xml.append("<sendtime>实际的发送时间</sendtime>");
        xml.append("<data>");
        xml.append("<key>processid</key>");
        xml.append("<value>").append(processid).append("</value>");
        xml.append("</data>");
        xml.append("<data>");
        xml.append("<key>account</key>");
        xml.append("<value>").append(account).append("</value>");
        xml.append("</data>");
        xml.append("</dates>");
        xml.append("</root>");
        OaWebService_Service service = new OaWebService_Service();
        OaWebService oaWebServiceImplPort = service.getOaWebServiceImplPort();
        BindingProvider bindingProvider = (BindingProvider)oaWebServiceImplPort;
        bindingProvider.getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, "http://10.242.35.162:30060/gd-bpc-extend-web/services/oaWebService");
        oaWebServiceImplPort.updateProcessInfo(pass,xml.toString());
	}
	/*
	 * MD5加密方法
	 */
    public static String MD5(String inStr) {
        MessageDigest md5 = null;
        try {
            md5 = MessageDigest.getInstance("MD5");
        } catch (Exception e) {
            System.out.println(e.toString());
            e.printStackTrace();
            return "";
        }
        char[] charArray = inStr.toCharArray();
        byte[] byteArray = new byte[charArray.length];

        for (int i = 0; i < charArray.length; i++)
            byteArray[i] = (byte) charArray[i];

        byte[] md5Bytes = md5.digest(byteArray);

        StringBuffer hexValue = new StringBuffer();

        for (int i = 0; i < md5Bytes.length; i++) {
            int val = ((int) md5Bytes[i]) & 0xff;
            if (val < 16)
                hexValue.append("0");
            hexValue.append(Integer.toHexString(val));
        }

        return hexValue.toString();
    }
}
